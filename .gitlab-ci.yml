stages:
  - build
  - release

build_all_arch:
  stage: build
  image: registry.lanni/nibuntu/build-20.04
  script:
    - apt update
    - apt install -y libzmq3-dev
    - apt install -y libzmq3-dev:i386
    - apt install -y libzmq3-dev:arm64
    - apt install -y libzmq3-dev:armhf
    - compile_all_architecures.sh
    #- build_debs.sh
  artifacts:
    untracked: false
    paths:
      - build_x64/output/*
      - build_i386/output/*
      - build_arm64/output/*
      - build_armhf/output/*
      - ./*.deb

build_zynq:
  stage: build
  image: registry.lanni/nibuntu/console-20.04:latest
  script:
    - ./compile_for_zynq.sh
  artifacts:
    untracked: false
    paths:
      - build_zynq/libr5560-zynq.tar.gz

build_all_arch_focal:
  stage: build
  image: registry.lanni/nibuntu/build-20.04:latest
  variables:
    LINUXRELEASE: "focal"
  script:
    - echo $CI_COMMIT_TAG>VERSION
    - ./compile_all_architecures.sh
    - ./compile_deb.sh
    - mkdir tars
    - mkdir debs
    - mv libr5560-x64.deb debs/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-x64.deb
    - mv libr5560-i386.deb debs/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-i386.deb
    - mv libr5560-arm64.deb debs/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-arm64.deb
    - mv libr5560-armhf.deb debs/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-armhf.deb
    - mv libr5560-x64.tar.gz tars/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-x64.tar.gz
    - mv libr5560-i386.tar.gz tars/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-i386.tar.gz
    - mv libr5560-arm64.tar.gz tars/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-arm64.tar.gz
    - mv libr5560-armhf.tar.gz tars/libr5560-$CI_COMMIT_TAG-$LINUXRELEASE-armhf.tar.gz
    - cd tars
    - tar zcvf ../libr5560-lib-$LINUXRELEASE.tar.gz .
    - cd ../debs
    - tar zcvf ../libr5560-deb-$LINUXRELEASE.tar.gz .

  artifacts:
    untracked: false
    paths:
    - libr5560-lib-$LINUXRELEASE.tar.gz
    - libr5560-deb-$LINUXRELEASE.tar.gz

  rules:
    - if: $CI_COMMIT_TAG

nirelease:
  stage: release
  image: registry.lanni/apps/release-manager:latest
  dependencies: 
    - build_vs2022_windows
    - build_zynq  
    - build_all_arch_focal
  script:
    - mv output/scisdk-full.zip  output/scisdk-win-full.zip  
    # - mv linux linux_x64
    # - tar -zcvf linux_x64.tar.gz linux_x64
    - nirelease -f ni-release-windows-full.yaml -c -v $CI_COMMIT_TAG -m "Autogenerated by pipeline with tag $CI_COMMIT_TAG"
    - nirelease -f ni-release-zynq.yaml -c -v $CI_COMMIT_TAG -m "Autogenerated by pipeline with tag $CI_COMMIT_TAG"
    - nirelease -f ni-release-linux.yaml -c -v $CI_COMMIT_TAG -m "Autogenerated by pipeline with tag $CI_COMMIT_TAG"
    - echo "Generate diff from last release for the latest release"
    - if [ -f CHANGELOG.md ]; then LATEST_TAG=`git tag --sort=-creatordate | head -2 | tail -n 1`; fi
    - if [ -f CHANGELOG.md ]; then git diff $LATEST_TAG ./CHANGELOG.md | tail -n +6 | sed -n "/^+/p" | sed -e "s/^+//" > ./latestChanges.md; fi
    - if [ ! -f CHANGELOG.md ]; then touch latestChanges.md; fi
    - echo "Creating release with the following changelog changes:"
    - cat latestChanges.md    
    - export URLNR=$(nirelease -f ni-release-windows-full.yaml --geturl)
    - export URLNR2=$(nirelease -f ni-release-zynq.yaml --geturl)
    - export URLNR3=$(nirelease -f ni-release-linux.yaml --geturl)
    - release-cli create --description "./latestChanges.md" --tag-name "$CI_COMMIT_TAG" --assets-link "[{\"url\":\"$URLNR\",\"name\":\"scisdk-win-full-$CI_COMMIT_TAG\"}, {\"url\":\"$URLNR2\",\"name\":\"scisdk-zynq-$CI_COMMIT_TAG\"}, {\"url\":\"$URLNR3\",\"name\":\"scisdk-linux-$CI_COMMIT_TAG\"}]"
      

  rules:
    - if: $CI_COMMIT_TAG
  when: on_success

